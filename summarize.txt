1.大图片加载
  使用openseadragon 
2.大文件上传
（1）需求分析，为什么要做大文件上传
  1大文件上传耗时长，容易导致请求超时。
  2上传速度和效率：原始的文件上传方式可能需要等待整个文件上传完成才能提交，耗时较长。占用服务器和网络带宽资源，可能影响其他用户的访问速度。
  3如果上传中断，需要重新上传整个文件，效率低下。
  4难以实现上传进度的显示和控制。
（2）需要实现的功能点
  分片上传：将大文件切分成多个小块，逐个上传。这样可以提高上传速度和稳定性，并且在上传失败时只需重新上传失败的分片，而不需要重新上传整个文件。
    分片卡顿问题，计算MD5,使用webworkker，采样计算hash。
  并发上传数量管理：同时上传多个分片，以提高上传速度和效率。
      上传
  断点续传：记录已上传的分片信息，以便在上传中断或失败后能够继续上传。这样可以保证文件上传的完整性，并提供更好的用户体验。
    服务端保存已上传的切片 hash，前端每次上传前向服务端获取已上传的切片
  上传进度显示：实时展示文件上传的进度，让用户了解上传的状态。可以通过进度条、百分比等方式进行展示。
    已上传切片数/总切片数
  支持取消上传：在上传的途中，可以取消本次上传，当再次上传时，会执行断点续传。
    abortController
